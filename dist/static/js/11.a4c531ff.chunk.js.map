{"version":3,"sources":["pages/article-details/service.ts","pages/post-article/components/TypeRadio/index.tsx","server/request.ts","pages/edit-article/index.tsx","pages/edit-article/service.ts","pages/home-page/service.ts"],"names":["getArticleDetails","params","request","get","likeArticle","post","commentArticle","TypeRadio","onChange","props","getTypeValue","id","value","className","this","type","defaultChecked","name","htmlFor","React","Component","instance","axios","create","baseURL","timeout","withCredentials","interceptors","use","config","headers","error","console","warn","Promise","reject","response","data","url","qs","stringify","EditArticle","onHandleTitle","e","setState","title","target","onHandleDes","des","onHandleTag","tag","typeId","typeName","onHandleContent","content","showModel","visible","handleCancel","handleOk","state","userIds","ids","confirmLoading","setTimeout","updateArticle","then","res","message","msg","success","history","push","typeList","bind","match","articleData","_id","getArticleCategory","placeholder","to","onClick","onOk","onCancel","okText","cancelText","map","item","key","getArticleList","getArticleHotList","getArticlePopularList","getPersonalData","userLogin","userRegister","userLogout"],"mappings":"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","file":"static/js/11.a4c531ff.chunk.js","sourcesContent":["import { request } from '../../server/request';\nimport { ArticleDetailsParamsType } from './data';\n\n/**\n * 获取文章详情\n */\nexport function getArticleDetails(params: ArticleDetailsParamsType) {\n  return request.get('/article/details', params);\n}\n\n/**\n * 点赞文章\n */\nexport function likeArticle(params: ArticleDetailsParamsType) {\n  return request.post('/article/like', params);\n}\n\n/**\n * 评论文章\n */\nexport function commentArticle(params: any) {\n  return request.post('/article/comment', params);\n}","import React from 'react';\nimport './style.less';\n\ninterface TypeRadioPropsType {\n  id: string;\n  defaultChecked?: boolean;\n  name: string;\n  value: string;\n  getTypeValue: Function;\n}\n\nclass TypeRadio extends React.Component<TypeRadioPropsType> {\n\n  onChange = () => {\n    this.props.getTypeValue(this.props.id, this.props.value);\n  }\n\n  render() {\n    return (\n      <span className=\"radio\">\n        <input\n          id={this.props.id}\n          type=\"radio\"\n          defaultChecked={this.props.defaultChecked || false}\n          name={this.props.name}\n          onChange={this.onChange}\n        />\n        <label htmlFor={this.props.id} className=\"label\">\n          {this.props.value}\n        </label>\n      </span>\n    )\n  }\n}\n\nexport default TypeRadio;","import axios from 'axios';\nimport qs from 'qs';\n\n/**\n * 自定义实例默认值\n */\nconst instance = axios.create({\n  baseURL: 'http://127.0.0.1',\n  timeout: 5000, // 请求超时时间\n  withCredentials: true,\n});\n\n/**\n * 添加请求拦截器 ，意思就是发起请求接口之前做什么事，一般都会发起加载一个loading\n */\ninstance.interceptors.request.use(\n  config => {\n    // 在发送请求之前做些什么（... 这里写你的展示loading的逻辑代码 ）\n    // 获取token，配置请求头\n    config.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n    return config;\n  },\n  error => {\n    // 对请求错误做些什么，处理这个错误\n    // 可以直接处理或者展示出去,toast show()\n    console.warn(error);\n    return Promise.reject(error);\n  }\n);\n/**\n * 添加响应拦截器\n */\ninstance.interceptors.response.use(\n  response => {\n    let res = response.data;\n    return res;\n  },\n  error => {\n    //响应错误\n    // console.log(error)\n    return Promise.reject(error);\n  }\n)\n/**\n * 使用es6中的类，进行简单封装\n */\nexport class request {\n  // 使用async ... await\n  static async get(url: string, params: any) {\n    return await instance.get(url, {\n      params: params\n    });\n  }\n  static async post(url: string, params: any) {\n    return await instance.post(url, qs.stringify(params));\n  }\n  static async filePost(url: string, params: any) {\n    return await instance.post(url, params);\n  }\n};","import React from 'react';\nimport ReactQuill from 'react-quill'; // ES6\nimport 'react-quill/dist/quill.snow.css';\nimport '../post-article/style.less';\nimport { Button, Modal, message } from 'antd';\nimport TypeRadio from '../post-article/components/TypeRadio';\nimport { updateArticle } from './service';\nimport { getArticleCategory } from '../home-page/service';\nimport { getArticleDetails } from '../article-details/service';\nimport { Link } from 'react-router-dom';\n\nclass EditArticle extends React.Component<any, any> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      userIds: '',\n      ids: '',\n      title: '',\n      des: '',\n      content: '',\n      typeId: '',\n      typeName: '',\n      tag: '',\n      typeList: [],\n      visible: false,\n      confirmLoading: false,\n    }\n    this.onHandleTitle = this.onHandleTitle.bind(this)\n    this.onHandleDes = this.onHandleDes.bind(this)\n    this.onHandleContent = this.onHandleContent.bind(this)\n    this.onHandleTag = this.onHandleTag.bind(this)\n  }\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    // 获取文章详情\n    getArticleDetails(params).then((res: any) => {\n      const { articleData } = res;\n      this.setState({\n        ids: articleData._id,\n        userIds: articleData.userIds,\n        title: articleData.title,\n        des: articleData.des,\n        content: articleData.content,\n        typeId: articleData.typeId,\n        typeName: articleData.typeName,\n        tag: articleData.tag,\n      })\n    });\n    // 获取分类选项\n    getArticleCategory().then((res: any) => {\n      this.setState({ typeList: res.data });\n    })\n  }\n\n  /**\n   * 标题、简述、标签、分类、富文本内容\n   */\n  onHandleTitle = (e: any) => {\n    this.setState({ title: e.target.value });\n  }\n  onHandleDes = (e: any) => {\n    this.setState({ des: e.target.value });\n  }\n  onHandleTag = (e: any) => {\n    this.setState({ tag: e.target.value });\n  }\n  getTypeValue = (id: string, name: string) => {\n    this.setState({\n      typeId: id,\n      typeName: name\n    });\n  }\n  onHandleContent = (value: string) => {\n    this.setState({ content: value });\n  }\n\n  /**\n   * 打开Model弹窗\n   */\n  showModel = () => {\n    this.setState({ visible: true });\n  }\n\n  /**\n   * 关闭Model弹窗\n   */\n  handleCancel = () => {\n    this.setState({ visible: false });\n  }\n\n  /**\n   * 修改文章\n   */\n  handleOk = () => {\n    const { userIds, ids, title, des, content, typeId, typeName, tag } = this.state;\n    const params = { userIds, ids, title, des, content, typeId, typeName, tag };\n\n    this.setState({ confirmLoading: true });\n    setTimeout(() => {\n      this.setState({\n        visible: false,\n        confirmLoading: false,\n      }, () => {\n        updateArticle(params).then((res: any) => {\n          if (!res.state) {\n            message.success('修改成功！', 1.5, () => {\n              this.props.history.push(`/article/${res.ids}`);\n            })\n          } else {\n            message.error(res.msg);\n          }\n        })\n      });\n    }, 1500);\n  };\n\n  render() {\n    return (\n      <main className=\"main\">\n        <div className=\"title\">\n          <div className=\"input-title\">\n            <input type=\"text\"\n              placeholder=\"输入文章标题...\"\n              value={this.state.title}\n              onChange={this.onHandleTitle}\n            />\n          </div>\n          <div className=\"action-bar\">\n            <Link to={`/user/${this.state.userIds}`}>返回个人中心</Link>\n            <Button type=\"primary\" onClick={this.showModel}>确认修改</Button>\n            <Modal\n              title=\"修改文章\"\n              visible={this.state.visible}\n              onOk={this.handleOk}\n              onCancel={this.handleCancel}\n              confirmLoading={this.state.confirmLoading}\n              okText=\"确认\"\n              cancelText=\"取消\"\n            >\n              <div className=\"row\">\n                <h3>分类</h3>\n                {this.state.typeList.map((item: any) => (\n                  <TypeRadio\n                    key={item.typeId}\n                    id={item.typeId}\n                    defaultChecked={item.typeId === this.state.typeId ? true : false}\n                    value={item.typeName}\n                    name=\"分类\"\n                    getTypeValue={this.getTypeValue}\n                  />\n                ))}\n              </div>\n              <div className=\"row\">\n                <h3>标签</h3>\n                <input type=\"text\"\n                  placeholder=\"添加一个标签\"\n                  value={this.state.tag}\n                  onChange={this.onHandleTag}\n                />\n              </div>\n            </Modal>\n          </div>\n        </div>\n        <div className=\"des\">\n          <textarea\n            placeholder=\"输入文章简述...\"\n            onChange={this.onHandleDes}\n            value={this.state.des}\n          ></textarea>\n        </div>\n        <ReactQuill\n          placeholder=\"输入文章内容...\"\n          value={this.state.content}\n          onChange={this.onHandleContent}\n        />\n      </main>\n    )\n  }\n}\n\nexport default EditArticle;","import { request } from '../../server/request';\n\n/**\n * 修改文章\n */\nexport function updateArticle(params: any) {\n  return request.post('/article/update', params);\n}\n\n/**\n * 获取文章分类信息\n */\nexport function getArticleCategory() {\n  return request.get('/category/list', {});\n}","import { request } from '../../server/request';\nimport { ArticleListParamsType, UserLoginParamsType } from './data';\n\n/**\n * 获取文章分类信息\n */\nexport function getArticleCategory() {\n  return request.get('/category/list', {});\n}\n\n/**\n * 获取文章列表\n */\nexport function getArticleList(params: ArticleListParamsType) {\n  return request.get('/article/list', params);\n}\n\n/**\n * 获取阅读量排行榜文章\n */\nexport function getArticleHotList() {\n  return request.get('/article/hotlist', {});\n}\n\nexport function getArticlePopularList() {\n  return request.get('/article/popularlist', {});\n}\n\n/**\n * 获取个人资料\n */\nexport function getPersonalData() {\n  return request.get('/user/personaldata', {});\n}\n\n/**\n * 用户登录\n */\nexport function userLogin(params: UserLoginParamsType) {\n  return request.post('/user/login', params);\n}\n\n/**\n * 用户注册\n */\nexport function userRegister(params: UserLoginParamsType) {\n  return request.post('/user/register', params);\n}\n\n/**\n * 退出登录\n */\nexport function userLogout() {\n  return request.post('/user/logout', {});\n}"],"sourceRoot":""}