{"version":3,"sources":["server/request.ts","pages/post-article/components/TypeRadio/index.tsx","pages/post-article/index.tsx","pages/post-article/service.ts","pages/home-page/service.ts"],"names":["instance","axios","create","baseURL","timeout","withCredentials","interceptors","request","use","config","headers","error","console","warn","Promise","reject","response","data","url","params","get","post","qs","stringify","TypeRadio","onChange","props","getTypeValue","id","value","className","this","type","defaultChecked","name","htmlFor","React","Component","PostArticle","onHandleTitle","e","setState","title","target","onHandleDes","des","onHandleTag","tag","typeId","typeName","onHandleContent","content","showModel","visible","handleCancel","handleOk","state","userIds","confirmLoading","setTimeout","postArticle","then","res","message","msg","success","history","push","articleIds","typeList","bind","getArticleCategory","match","ids","placeholder","to","onClick","onOk","onCancel","okText","cancelText","map","item","key","getArticleList","getPersonalData","userLogin","userRegister","userLogout"],"mappings":"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","file":"static/js/11.1a423004.chunk.js","sourcesContent":["import axios from 'axios';\nimport qs from 'qs';\n\n/**\n * 自定义实例默认值\n */\nconst instance = axios.create({\n  baseURL: 'http://127.0.0.1:8000',\n  timeout: 5000, // 请求超时时间\n  withCredentials: true,\n});\n\n/**\n * 添加请求拦截器 ，意思就是发起请求接口之前做什么事，一般都会发起加载一个loading\n */\ninstance.interceptors.request.use(\n  config => {\n    // 在发送请求之前做些什么（... 这里写你的展示loading的逻辑代码 ）\n    // 获取token，配置请求头\n    config.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n    return config;\n  },\n  error => {\n    // 对请求错误做些什么，处理这个错误\n    // 可以直接处理或者展示出去,toast show()\n    console.warn(error);\n    return Promise.reject(error);\n  }\n);\n/**\n * 添加响应拦截器\n */\ninstance.interceptors.response.use(\n  response => {\n    let res = response.data;\n    return res;\n  },\n  error => {\n    //响应错误\n    // console.log(error)\n    return Promise.reject(error);\n  }\n)\n/**\n * 使用es6中的类，进行简单封装\n */\nexport class request {\n  // 使用async ... await\n  static async get(url: string, params: any) {\n    return await instance.get(url, {\n      params: params\n    });\n  }\n  static async post(url: string, params: any) {\n    return await instance.post(url, qs.stringify(params));\n  }\n  static async filePost(url: string, params: any) {\n    return await instance.post(url, params);\n  }\n};","import React from 'react';\nimport './style.less';\n\ninterface TypeRadioPropsType {\n  id: string;\n  defaultChecked?: boolean;\n  name: string;\n  value: string;\n  getTypeValue: Function;\n}\n\nclass TypeRadio extends React.Component<TypeRadioPropsType> {\n\n  onChange = () => {\n    this.props.getTypeValue(this.props.id, this.props.value);\n  }\n\n  render() {\n    return (\n      <span className=\"radio\">\n        <input\n          id={this.props.id}\n          type=\"radio\"\n          defaultChecked={this.props.defaultChecked || false}\n          name={this.props.name}\n          onChange={this.onChange}\n        />\n        <label htmlFor={this.props.id} className=\"label\">\n          {this.props.value}\n        </label>\n      </span>\n    )\n  }\n}\n\nexport default TypeRadio;","import React from 'react';\nimport ReactQuill from 'react-quill'; // ES6\nimport 'react-quill/dist/quill.snow.css';\nimport './style.less';\nimport { Button, Modal, message } from 'antd';\nimport TypeRadio from './components/TypeRadio';\nimport { postArticle } from './service';\nimport { getArticleCategory } from '../home-page/service';\nimport { Link } from 'react-router-dom';\n\nclass PostArticle extends React.Component<any, any> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      userIds: '',\n      title: '',\n      des: '',\n      content: '',\n      typeId: '',\n      typeName: '',\n      tag: '',\n      typeList: [],\n      visible: false,\n      confirmLoading: false,\n    }\n    this.onHandleTitle = this.onHandleTitle.bind(this)\n    this.onHandleDes = this.onHandleDes.bind(this)\n    this.onHandleContent = this.onHandleContent.bind(this)\n    this.onHandleTag = this.onHandleTag.bind(this)\n  }\n\n  /**\n   * 标题、简述、标签、分类、富文本内容\n   */\n  onHandleTitle = (e: any) => {\n    this.setState({ title: e.target.value });\n  }\n  onHandleDes = (e: any) => {\n    this.setState({ des: e.target.value });\n  }\n  onHandleTag = (e: any) => {\n    this.setState({ tag: e.target.value });\n  }\n  getTypeValue = (id: string, name: string) => {\n    this.setState({\n      typeId: id,\n      typeName: name\n    });\n  }\n  onHandleContent = (value: string) => {\n    this.setState({ content: value });\n  }\n\n  /**\n   * 打开Model弹窗\n   */\n  showModel = () => {\n    this.setState({ visible: true });\n  }\n\n  /**\n   * 关闭Model弹窗\n   */\n  handleCancel = () => {\n    this.setState({ visible: false });\n  }\n\n  /**\n   * 发布文章\n   */\n  handleOk = () => {\n    const { userIds, title, des, content, typeId, typeName, tag } = this.state;\n    const params = { userIds, title, des, content, typeId, typeName, tag };\n\n    this.setState({ confirmLoading: true });\n    setTimeout(() => {\n      this.setState({\n        visible: false,\n        confirmLoading: false,\n      });\n    }, 1500);\n\n    postArticle(params).then((res: any) => {\n      if (!res.state) {\n        message.success('发布成功！', 1.5, () => {\n          this.props.history.push(`/article/${res.articleIds}`);\n        })\n      } else {\n        message.error(res.msg);\n      }\n    })\n  };\n\n  componentDidMount() {\n    getArticleCategory().then((res: any) => {\n      this.setState({\n        userIds: this.props.match.params.ids,\n        typeList: res.data\n      });\n    })\n  }\n\n  render() {\n    return (\n      <main className=\"main\">\n        <div className=\"title\">\n          <div className=\"input-title\">\n            <input type=\"text\"\n              placeholder=\"输入文章标题...\"\n              value={this.state.title}\n              onChange={this.onHandleTitle}\n            />\n          </div>\n          <div className=\"action-bar\">\n            <Link to=\"/\">返回首页</Link>\n            <Button type=\"primary\" onClick={this.showModel}>发布</Button>\n            <Modal\n              title=\"发布文章\"\n              visible={this.state.visible}\n              onOk={this.handleOk}\n              onCancel={this.handleCancel}\n              confirmLoading={this.state.confirmLoading}\n              okText=\"发布\"\n              cancelText=\"取消\"\n            >\n              <div className=\"row\">\n                <h3>分类</h3>\n                {this.state.typeList.map((item: any) => (\n                  <TypeRadio\n                    key={item.typeId}\n                    id={item.typeId}\n                    value={item.typeName}\n                    name=\"分类\"\n                    getTypeValue={this.getTypeValue}\n                  />\n                ))}\n              </div>\n              <div className=\"row\">\n                <h3>标签</h3>\n                <input type=\"text\"\n                  placeholder=\"添加一个标签\"\n                  value={this.state.tag}\n                  onChange={this.onHandleTag}\n                />\n              </div>\n            </Modal>\n          </div>\n        </div>\n        <div className=\"des\">\n          <textarea\n            placeholder=\"输入文章简述...\"\n            onChange={this.onHandleDes}\n            value={this.state.des}\n          ></textarea>\n        </div>\n        <ReactQuill\n          placeholder=\"输入文章内容...\"\n          value={this.state.content}\n          onChange={this.onHandleContent}\n        />\n      </main>\n    )\n  }\n}\n\nexport default PostArticle;","import { request } from '../../server/request';\n\n/**\n * 发表文章\n */\nexport function postArticle(params: any) {\n  return request.post('/article/post', params);\n}\n\n/**\n * 获取文章分类信息\n */\nexport function getArticleCategory() {\n  return request.get('/category/list', {});\n}","import { request } from '../../server/request';\nimport { ArticleListParamsType, UserLoginParamsType } from './data';\n\n/**\n * 获取文章分类信息\n */\nexport function getArticleCategory() {\n  return request.get('/category/list', {});\n}\n\n/**\n * 获取文章列表\n */\nexport function getArticleList(params: ArticleListParamsType) {\n  return request.get('/article/list', params);\n}\n\n/**\n * 获取个人资料\n */\nexport function getPersonalData() {\n  return request.get('/user/personaldata', {});\n}\n\n/**\n * 用户登录\n */\nexport function userLogin(params: UserLoginParamsType) {\n  return request.post('/user/login', params);\n}\n\n/**\n * 用户注册\n */\nexport function userRegister(params: UserLoginParamsType) {\n  return request.post('/user/register', params);\n}\n\n/**\n * 退出登录\n */\nexport function userLogout() {\n  return request.post('/user/logout', {});\n}"],"sourceRoot":""}