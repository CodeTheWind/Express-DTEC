{"version":3,"sources":["pages/home-page/util.ts","services/requestPath.ts","services/request.ts","services/admin/service.ts","pages/backstage/user-list/index.tsx","pages/backstage/article-list/index.tsx","pages/backstage/category-list/index.tsx","pages/backstage/banner-list/index.tsx","pages/backstage/default/index.tsx","pages/backstage/index.tsx","services/user/service.ts","services/category/service.ts"],"names":["isPhone","phone","test","checkRegisterPassword","passwd","cpasswd","REQUEST_PATH","instance","axios","create","baseURL","timeout","withCredentials","interceptors","request","use","config","headers","error","console","warn","Promise","reject","response","data","url","params","get","post","qs","stringify","getUserList","addCategory","deleteObject","objectName","UserList","columns","title","dataIndex","key","width","render","text","record","username","onConfirm","onConfirmDelOne","_id","okText","cancelText","href","state","loading","visible","selectedDataIds","userData","tel","password","componentDidMount","getUserData","then","res","setState","delUsers","message","success","msg","ids","onConfirmDelMany","onSelectChange","onOpenModal","onCloseModal","onChangeTel","e","target","value","onChangePassword","onConfirmAddUser","register","this","rowSelection","onChange","hasSelected","length","className","Item","type","disabled","onClick","dataSource","rowKey","size","onOk","onCancel","centered","destroyOnClose","style","padding","placeholder","allowClear","React","Component","ArticleList","CategoryList","typeName","typeId","categoryData","getCategoryData","getCategoryList","delCategories","onChangeTypeId","onChangeTypeName","onConfirmAddCategory","BannerList","Default","SubMenu","Menu","Header","Layout","Sider","Content","Footer","NAV_LINK","link","iconType","BackStage","defaultSelectedKeys","defaultOpenKeys","collapsed","avatar","props","location","pathname","slice","push","some","item","getPersonalData","admin","history","onCollapse","minHeight","collapsible","to","theme","mode","map","src","alt","exact","path","component","textAlign","login","logout","updateUserData","updateAvatar","updatePassword","uploadAvatar","filePost"],"mappings":"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","file":"static/js/15.d5ef0fde.chunk.js","sourcesContent":["export function isPhone(phone: string): boolean {\n  let reg = /^1((3[\\d])|(4[5,6,9])|(5[0-3,5-9])|(6[5-7])|(7[0-8])|(8[1-3,5-8])|(9[1,8,9]))\\d{8}$/;\n  if (!reg.test(phone)) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\n/**\n * 0: 正确, 1: 密码为空, 2: 两次密码不一致\n * @param passwd 密码\n * @param cpasswd 确认密码\n */\nexport function checkRegisterPassword(passwd: string, cpasswd: string): number {\n  if (passwd !== '') {\n    if (passwd === cpasswd) {\n      return 0;\n    } else {\n      return 2;\n    }\n  } else {\n    return 1;\n  }\n}","const NODE_EDV = process.env.NODE_ENV;\n\nlet REQUEST_PATH: string = '';\n\nif (NODE_EDV === 'development') {\n  REQUEST_PATH = 'http://127.0.0.1:3000';\n} else {\n  REQUEST_PATH = 'http://127.0.0.1';\n}\n\nexport default REQUEST_PATH;","import axios from 'axios';\nimport qs from 'qs';\nimport REQUEST_PATH from './requestPath';\n\n/**\n * 自定义实例默认值\n */\nconst instance = axios.create({\n  baseURL: REQUEST_PATH,\n  timeout: 5000, // 请求超时时间\n  withCredentials: true,\n});\n\n/**\n * 添加请求拦截器 ，意思就是发起请求接口之前做什么事，一般都会发起加载一个loading\n */\ninstance.interceptors.request.use(\n  config => {\n    // 在发送请求之前做些什么（... 这里写你的展示loading的逻辑代码 ）\n    // 获取token，配置请求头\n    config.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n    return config;\n  },\n  error => {\n    // 对请求错误做些什么，处理这个错误\n    // 可以直接处理或者展示出去,toast show()\n    console.warn(error);\n    return Promise.reject(error);\n  }\n);\n/**\n * 添加响应拦截器\n */\ninstance.interceptors.response.use(\n  response => {\n    let res = response.data;\n    return res;\n  },\n  error => {\n    //响应错误\n    // console.log(error)\n    return Promise.reject(error);\n  }\n)\n/**\n * 使用es6中的类，进行简单封装\n */\nexport class request {\n  // 使用async ... await\n  static async get(url: string, params: any) {\n    return await instance.get(url, {\n      params: params\n    });\n  }\n  static async post(url: string, params: any) {\n    return await instance.post(url, qs.stringify(params));\n  }\n  static async filePost(url: string, params: any) {\n    return await instance.post(url, params);\n  }\n};","import { request } from '../request';\n\n/**\n * 获取用户列表\n */\nconst getUserList = () => {\n  return request.get('/admin/get/userlist', {});\n}\n\n/**\n * 添加分类\n */\nconst addCategory = (params: any) => {\n  return request.post('/admin/add/category', params);\n}\n\n/**\n * 删除对象\n */\nconst deleteObject = (params: any, objectName: string) => {\n  return request.post(`/admin/delete/${objectName}`, params);\n}\n\nexport {\n  getUserList,\n  addCategory,\n  deleteObject,\n}","import React from 'react';\nimport { Breadcrumb, Table, Popconfirm, message, Button, Modal, Input } from 'antd';\nimport { DelObjectParamsType } from '../data';\nimport { UserLoginParamsType } from '../../home-page/data';\nimport { isPhone } from '../../home-page/util';\nimport { register } from '../../../services/user/service';\nimport { getUserList, deleteObject } from '../../../services/admin/service';\n\nclass UserList extends React.Component {\n\n  // 表列项\n  private columns = [\n    {\n      title: '_id',\n      dataIndex: '_id',\n      key: '_id',\n      width: 350,\n    },\n    {\n      title: '用户名',\n      dataIndex: 'username',\n      key: 'username',\n    },\n    {\n      title: '手机号',\n      dataIndex: 'tel',\n      key: 'tel',\n    },\n    {\n      title: '创建时间',\n      dataIndex: 'createdDate',\n      key: 'createdDate',\n    },\n    {\n      title: '操作',\n      key: 'action',\n      render: (text: any, record: any) => (\n        <span>\n          <Popconfirm\n            title={`你确定要删除 “${record.username}” 吗？`}\n            onConfirm={() => this.onConfirmDelOne(record._id)}\n            okText=\"确定\"\n            cancelText=\"取消\"\n          >\n            <a href=\"/\">删除</a>\n          </Popconfirm>\n        </span>\n      ),\n    },\n  ];\n\n  state = {\n    loading: true,\n    visible: false,\n    selectedDataIds: [],\n    userData: [],\n    tel: '',\n    password: '',\n  }\n\n  componentDidMount = () => {\n    this.getUserData();\n  }\n\n  /**\n   * 获取用户数据\n   */\n  getUserData = () => {\n    getUserList().then((res: any) => {\n      this.setState({ userData: res.data, loading: false });\n    })\n  }\n\n  /**\n   * 删除用户\n   */\n  delUsers = (params: DelObjectParamsType) => {\n    deleteObject(params, 'user').then((res: any) => {\n      if (res.state === 200) {\n        message.success('删除成功！', 2);\n        this.getUserData();\n      } else {\n        message.error(res.msg);\n      }\n    })\n  }\n\n  /**\n   * 确认删除用户 - 单项\n   */\n  onConfirmDelOne = (ids: string) => {\n    const params: DelObjectParamsType = { ids: [ids] };\n    this.delUsers(params);\n  }\n  /**\n   * 确认删除用户 - 批量\n   */\n  onConfirmDelMany = () => {\n    const params: DelObjectParamsType = { ids: this.state.selectedDataIds };\n    this.delUsers(params);\n  }\n\n  /**\n   * 选择要操作的数据\n   */\n  onSelectChange = (selectedDataIds: number[] | string[]) => {\n    this.setState({ selectedDataIds });\n  };\n\n  /**\n   * 打开新增用户弹窗\n   */\n  onOpenModal = () => {\n    this.setState({\n      visible: true,\n    });\n  }\n\n  /**\n   * 关闭新增用户弹窗\n   */\n  onCloseModal = () => {\n    this.setState({\n      visible: false,\n      tel: '',\n      password: ''\n    });\n  }\n\n  /**\n   * 新增用户 - 手机号\n   */\n  onChangeTel = (e: any) => {\n    this.setState({ tel: e.target.value });\n  }\n\n  /**\n   * 新增用户 - 密码\n   */\n  onChangePassword = (e: any) => {\n    this.setState({ password: e.target.value });\n  }\n\n  /**\n   * 新增用户\n   */\n  onConfirmAddUser = () => {\n    const params: UserLoginParamsType = {\n      tel: this.state.tel,\n      password: this.state.password,\n    };\n    if (isPhone(params.tel)) {\n      register(params).then((res: any) => {\n        if (res.state === 0) {\n          message.success('新增成功！', 1.5, () => {\n            this.setState({ visible: false, tel: '', password: '' });\n            this.getUserData();\n          });\n        } else {\n          message.error(res.msg);\n        }\n      })\n    } else {\n      message.error('手机号格式错误！');\n    }\n  }\n\n  render() {\n    const { selectedDataIds } = this.state;\n    const rowSelection = {\n      selectedDataIds,\n      onChange: this.onSelectChange,\n    };\n    const hasSelected = selectedDataIds.length > 0;\n\n    return (\n      <>\n        <Breadcrumb className=\"breadcrumb\">\n          <Breadcrumb.Item>对象管理</Breadcrumb.Item>\n          <Breadcrumb.Item>用户管理</Breadcrumb.Item>\n        </Breadcrumb>\n\n        <div className=\"card\">\n          <div className=\"row\">\n            {\n              hasSelected ?\n                <Popconfirm\n                  title={`你确定要删除这些数据吗？`}\n                  onConfirm={() => this.onConfirmDelMany()}\n                  okText=\"确定\"\n                  cancelText=\"取消\"\n                >\n                  <Button type=\"primary\" disabled={!hasSelected}>批量删除</Button>\n                </Popconfirm> :\n                <Button type=\"primary\" disabled={!hasSelected}>批量删除</Button>\n            }\n            <Button type=\"primary\" onClick={this.onOpenModal}>新增用户</Button>\n          </div>\n          <Table\n            rowSelection={rowSelection}\n            columns={this.columns}\n            dataSource={this.state.userData}\n            rowKey={record => record._id}\n            size=\"middle\"\n            loading={this.state.loading}\n          />\n          <Modal\n            title=\"新增用户\"\n            visible={this.state.visible}\n            onOk={this.onConfirmAddUser}\n            onCancel={this.onCloseModal}\n            okText=\"确认\"\n            cancelText=\"取消\"\n            centered\n            destroyOnClose\n          >\n            <div style={{ padding: '0 20%' }}>\n              <Input placeholder=\"输入用户手机号\" allowClear onChange={this.onChangeTel} />\n              <br />\n              <br />\n              <Input placeholder=\"输入密码\" allowClear onChange={this.onChangePassword} />\n            </div>\n          </Modal>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default UserList;","import React from 'react';\nimport { Breadcrumb } from 'antd';\n\nclass ArticleList extends React.Component {\n  componentDidMount = () => {\n  }\n  render() {\n    return (\n      <>\n        <Breadcrumb className=\"breadcrumb\">\n          <Breadcrumb.Item>对象管理</Breadcrumb.Item>\n          <Breadcrumb.Item>文章管理</Breadcrumb.Item>\n        </Breadcrumb>\n\n        <div className=\"content\"></div>\n      </>\n    )\n  }\n}\n\nexport default ArticleList;","import React from 'react';\nimport { Breadcrumb, Popconfirm, Table, Button, message, Divider, Modal, Input } from 'antd';\nimport { DelObjectParamsType } from '../data';\nimport { getCategoryList } from '../../../services/category/service';\nimport { addCategory, deleteObject } from '../../../services/admin/service';\n\nclass CategoryList extends React.Component {\n\n  // 表列项\n  private columns = [\n    {\n      title: '_id',\n      dataIndex: '_id',\n      key: '_id',\n      width: 350,\n    },\n    {\n      title: '分类名称',\n      dataIndex: 'typeName',\n      key: 'typeName',\n      width: 200,\n    },\n    {\n      title: '分类id',\n      dataIndex: 'typeId',\n      key: 'typeId',\n      width: 200,\n    },\n    {\n      title: '创建者',\n      dataIndex: 'creator',\n      key: 'creator',\n    },\n    {\n      title: '创建时间',\n      dataIndex: 'createdDate',\n      key: 'createdDate',\n    },\n    {\n      title: '操作',\n      key: 'action',\n      render: (text: any, record: any) => (\n        <span>\n          <span className=\"op\">编辑</span>\n          <Divider type=\"vertical\" />\n          <Popconfirm\n            title={`你确定要删除 “${record.typeName}” 分类吗？`}\n            onConfirm={() => this.onConfirmDelOne(record._id)}\n            okText=\"确定\"\n            cancelText=\"取消\"\n          >\n            <a href=\"/\">删除</a>\n          </Popconfirm>\n        </span>\n      ),\n    },\n  ];\n\n  state = {\n    loading: true,\n    visible: false,\n    typeId: '',\n    typeName: '',\n    selectedDataIds: [],\n    categoryData: [],\n  }\n\n  componentDidMount = () => {\n    this.getCategoryData();\n  }\n\n  /**\n   * 获取分类列表\n   */\n  getCategoryData = () => {\n    getCategoryList().then((res: any) => {\n      this.setState({ categoryData: res.data, loading: false });\n    })\n  }\n\n  /**\n   * 删除分类\n   */\n  delCategories = (params: DelObjectParamsType) => {\n    deleteObject(params, 'category').then((res: any) => {\n      if (res.state === 200) {\n        message.success('删除成功！', 2);\n        this.getCategoryData();\n      } else {\n        message.error(res.msg);\n      }\n    })\n  }\n\n  /**\n   * 选择要操作的数据\n   */\n  onSelectChange = (selectedDataIds: number[] | string[]) => {\n    this.setState({ selectedDataIds });\n  };\n\n  /**\n * 打开新增分类弹窗\n */\n  onOpenModal = () => {\n    this.setState({\n      visible: true,\n    });\n  }\n\n  /**\n   * 关闭新增分类弹窗\n   */\n  onCloseModal = () => {\n    this.setState({\n      visible: false,\n      typeId: '',\n      typeName: '',\n    });\n  }\n\n  /**\n   * 确认删除分类 - 单项\n   */\n  onConfirmDelOne = (ids: string) => {\n    const params: DelObjectParamsType = { ids: [ids] };\n    this.delCategories(params);\n  }\n\n  /**\n   * 确认删除分类 - 批量\n   */\n  onConfirmDelMany = () => {\n    const params: DelObjectParamsType = { ids: this.state.selectedDataIds };\n    this.delCategories(params);\n  }\n\n  /**\n   * 新增分类 - 分类id\n   */\n  onChangeTypeId = (e: any) => {\n    this.setState({ typeId: e.target.value });\n  }\n\n  /**\n   * 新增分类 - 名称\n   */\n  onChangeTypeName = (e: any) => {\n    this.setState({ typeName: e.target.value });\n  }\n\n  /**\n   * 新增分类\n   */\n  onConfirmAddCategory = () => {\n    const params = { typeId: this.state.typeId, typeName: this.state.typeName };\n    addCategory(params).then((res: any) => {\n      if (res.state === 200) {\n        message.success('添加成功！', 1.5, () => {\n          this.setState({ visible: false, typeId: '', typeName: '' });\n          this.getCategoryData();\n        });\n      } else {\n        message.error(res.msg);\n      }\n    })\n  }\n\n  render() {\n    const { selectedDataIds } = this.state;\n    const rowSelection = {\n      selectedDataIds,\n      onChange: this.onSelectChange,\n    };\n    const hasSelected = selectedDataIds.length > 0;\n\n    return (\n      <>\n        <Breadcrumb className=\"breadcrumb\">\n          <Breadcrumb.Item>对象管理</Breadcrumb.Item>\n          <Breadcrumb.Item>分类管理</Breadcrumb.Item>\n        </Breadcrumb>\n\n        <div className=\"card\">\n          <div className=\"row\">\n            {\n              hasSelected ?\n                <Popconfirm\n                  title={`你确定要删除这些数据吗？`}\n                  onConfirm={() => this.onConfirmDelMany()}\n                  okText=\"确定\"\n                  cancelText=\"取消\"\n                >\n                  <Button type=\"primary\" disabled={!hasSelected}>批量删除</Button>\n                </Popconfirm> :\n                <Button type=\"primary\" disabled={!hasSelected}>批量删除</Button>\n            }\n            <Button type=\"primary\" onClick={this.onOpenModal}>新增分类</Button>\n          </div>\n\n          <Table\n            rowSelection={rowSelection}\n            columns={this.columns}\n            dataSource={this.state.categoryData}\n            rowKey={record => record._id}\n            size=\"middle\"\n            loading={this.state.loading}\n          />\n          <Modal\n            title=\"新增分类\"\n            visible={this.state.visible}\n            onOk={this.onConfirmAddCategory}\n            onCancel={this.onCloseModal}\n            okText=\"确认\"\n            cancelText=\"取消\"\n            centered\n            destroyOnClose\n          >\n            <div style={{ padding: '0 20%' }}>\n              <Input placeholder=\"输入分类ID\" allowClear onChange={this.onChangeTypeId} />\n              <br />\n              <br />\n              <Input placeholder=\"输入分类名称\" allowClear onChange={this.onChangeTypeName} />\n            </div>\n          </Modal>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default CategoryList;","import React from 'react';\nimport { Breadcrumb } from 'antd';\n\nclass BannerList extends React.Component {\n  render() {\n    return (\n      <>\n        <Breadcrumb className=\"breadcrumb\">\n          <Breadcrumb.Item>封面图管理</Breadcrumb.Item>\n        </Breadcrumb>\n\n        <div className=\"content\"></div>\n      </>\n    )\n  }\n}\n\nexport default BannerList;","import React from 'react';\n\nclass Default extends React.Component {\n  render() {\n    return (\n      <div className=\"default\">\n        欢迎进入开发者技术交流社区后台管理系统！\n      </div>\n    )\n  }\n}\n\nexport default Default;","import React from 'react';\nimport UserList from './user-list';\nimport ArticleList from './article-list';\nimport CategoryList from './category-list';\nimport BannerList from './banner-list';\nimport Default from './default';\nimport { Layout, Menu, Icon } from 'antd';\nimport { Route, Link } from 'react-router-dom';\nimport { BackStoragePropsType, BackStorageStateType } from './data';\nimport { getPersonalData } from '../../services/user/service';\nimport './style.less';\n\n\nconst { SubMenu } = Menu;\nconst { Header, Sider, Content, Footer } = Layout;\n\nconst NAV_LINK = [\n  { title: '用户管理', link: 'user-management', iconType: 'user' },\n  { title: '文章管理', link: 'article-management', iconType: 'read' },\n  { title: '分类管理', link: 'category-management', iconType: 'tag' },\n]\n\n\nclass BackStage extends React.Component<BackStoragePropsType, BackStorageStateType> {\n\n  private defaultSelectedKeys: string[] = [''];\n  private defaultOpenKeys: string[] = [''];\n\n  state = {\n    collapsed: false,\n    userData: {\n      avatar: '',\n      username: '',\n    }\n  };\n\n  componentDidMount = () => {\n    const type = this.props.location.pathname.slice(7) || '';\n\n    this.defaultSelectedKeys.push(type);\n\n    if (NAV_LINK.some(item => item.link === type)) {\n      this.defaultOpenKeys.push('object-management');\n    }\n\n    // 获取当前登录人信息\n    getPersonalData().then((res: any) => {\n      if (res.state === 302 || !res.data.admin) {\n        this.props.history.push('/exception/404');\n      } else {\n        this.setState({ userData: res.data });\n      }\n    })\n\n  }\n\n  onCollapse = (collapsed: boolean) => {\n    this.setState({ collapsed });\n  };\n\n  render() {\n    const { userData } = this.state;\n\n    return (\n      <Layout style={{ minHeight: '100vh' }}>\n        <Sider collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse} width=\"250\">\n          <div className=\"logo\">\n            <Link to=\"/admin\" className={this.state.collapsed ? 'small' : 'normal'}>DTEC</Link>\n          </div>\n          <Menu theme=\"dark\"\n            defaultSelectedKeys={this.defaultSelectedKeys}\n            defaultOpenKeys={this.defaultOpenKeys}\n            mode=\"inline\">\n\n            <SubMenu\n              key=\"object-management\"\n              title={\n                <span>\n                  <Icon type=\"apartment\" />\n                  <span>对象管理</span>\n                </span>\n              }\n            >\n              {NAV_LINK.map(item => (\n                <Menu.Item key={item.link}>\n                  <Link to={`/admin/${item.link}`}><Icon type={item.iconType} /><span>{item.title}</span></Link>\n                </Menu.Item>\n              ))}\n            </SubMenu>\n            <Menu.Item key=\"banner-management\">\n              <Link to=\"/admin/banner-management\"><Icon type=\"picture\" /><span>封面图设置</span></Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout>\n          <Header className=\"backstage-header\">\n            <div className=\"username\">\n              <span className=\"avatar\">\n                <img src={`http://127.0.0.1${userData.avatar}`} alt=\"avatar\" />\n              </span>\n              <span>{userData.username}</span>\n            </div>\n          </Header>\n\n          <Content className=\"backstage-content\" >\n            <Route exact path=\"/admin/\" component={Default} />\n            <Route exact path=\"/admin/user-management\" component={UserList} />\n            <Route exact path=\"/admin/article-management\" component={ArticleList} />\n            <Route exact path=\"/admin/category-management\" component={CategoryList} />\n            <Route exact path=\"/admin/banner-management\" component={BannerList} />\n          </Content>\n\n          <Footer style={{ textAlign: 'center' }}>开发者技术交流社区 ©2020 Created by deng yu</Footer>\n        </Layout>\n      </Layout>\n    )\n  }\n}\n\nexport default BackStage;","import { request } from '../request';\nimport {\n  LoginParamsType,\n  GetUserDataParamsType,\n  UpdateDataParamsType,\n  UpdateAvatarParamsType,\n  UpdatePasswordParamsType,\n} from './data';\n\n/**\n * 登录\n */\nconst login = (params: LoginParamsType) => {\n  return request.post('/user/login', params);\n}\n\n/**\n * 注册\n */\nconst register = (params: LoginParamsType) => {\n  return request.post('/user/register', params);\n}\n\n/**\n * 退出\n */\nconst logout = () => {\n  return request.post('/user/logout', {});\n}\n\n/**\n * 获取当前登录人的信息\n */\nconst getPersonalData = () => {\n  return request.get('/user/get/personaldata', {});\n}\n\n/**\n * 获取用户资料\n */\nconst getUserData = (params: GetUserDataParamsType) => {\n  return request.get('/user/get/data', params);\n}\n\n/**\n * 修改个人基本资料\n */\nconst updateUserData = (params: UpdateDataParamsType) => {\n  return request.post('/user/update/data', params);\n}\n\n/**\n * 修改头像\n */\nconst updateAvatar = (params: UpdateAvatarParamsType) => {\n  return request.post('/user/update/avatar', params);\n}\n\n/**\n * 修改密码\n */\nconst updatePassword = (params: UpdatePasswordParamsType) => {\n  return request.post('/user/update/password', params);\n}\n\n/**\n * 上传头像\n */\nconst uploadAvatar = (params: any) => {\n  return request.filePost('/img/upload', params);\n}\n\nexport {\n  login,\n  register,\n  logout,\n  getPersonalData,\n  getUserData,\n  updatePassword,\n  updateAvatar,\n  updateUserData,\n  uploadAvatar,\n}","import { request } from '../request';\n\n/**\n * 获取分类列表\n */\nconst getCategoryList = () => {\n  return request.get('/category/list', {});\n}\n\nexport {\n  getCategoryList,\n}"],"sourceRoot":""}